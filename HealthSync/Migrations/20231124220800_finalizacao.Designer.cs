// <auto-generated />
using System;
using HealthSync.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthSync.Migrations
{
    [DbContext(typeof(HealthSyncContext))]
    [Migration("20231124220800_finalizacao")]
    partial class finalizacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthSync.Models.InfoMenu", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("InfoUserId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "InfoUserId");

                    b.HasIndex("InfoUserId");

                    b.ToTable("TB_INFOMENU");
                });

            modelBuilder.Entity("HealthSync.Models.InfoTrainner", b =>
                {
                    b.Property<int>("TrainnerId")
                        .HasColumnType("int");

                    b.Property<int>("InfoUserId")
                        .HasColumnType("int");

                    b.HasKey("TrainnerId", "InfoUserId");

                    b.HasIndex("InfoUserId");

                    b.ToTable("TB_INFOTRAINNER");
                });

            modelBuilder.Entity("HealthSync.Models.InfoUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeRestrictionMedic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeRestrictionTrainne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_INFOUSER");
                });

            modelBuilder.Entity("HealthSync.Models.Medic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USERMEDIC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberofCredential")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TB_USERMEDIC");
                });

            modelBuilder.Entity("HealthSync.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AfternoonSnack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breakfast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dinner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lunch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicId")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicId");

                    b.ToTable("TB_MENU");
                });

            modelBuilder.Entity("HealthSync.Models.Trainner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USERTRAINNER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberofCredential")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TB_USERTRAINNER");
                });

            modelBuilder.Entity("HealthSync.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdForWeek")
                        .HasColumnType("int");

                    b.Property<int>("QtdTime")
                        .HasColumnType("int");

                    b.Property<int>("TrainnerId")
                        .HasColumnType("int");

                    b.Property<int>("TypeWorkout")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainnerId");

                    b.ToTable("TB_WORKOUT");
                });

            modelBuilder.Entity("HealthSync.Models.InfoMenu", b =>
                {
                    b.HasOne("HealthSync.Models.InfoUser", "InfoUser")
                        .WithMany("InfosMenus")
                        .HasForeignKey("InfoUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthSync.Models.Menu", "Menu")
                        .WithMany("InfosMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InfoUser");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("HealthSync.Models.InfoTrainner", b =>
                {
                    b.HasOne("HealthSync.Models.InfoUser", "InfoUser")
                        .WithMany("InfosTrainners")
                        .HasForeignKey("InfoUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HealthSync.Models.Trainner", "Trainner")
                        .WithMany("InfosTrainners")
                        .HasForeignKey("TrainnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InfoUser");

                    b.Navigation("Trainner");
                });

            modelBuilder.Entity("HealthSync.Models.Menu", b =>
                {
                    b.HasOne("HealthSync.Models.Medic", "Medic")
                        .WithMany("Menus")
                        .HasForeignKey("MedicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medic");
                });

            modelBuilder.Entity("HealthSync.Models.Workout", b =>
                {
                    b.HasOne("HealthSync.Models.Trainner", "Trainner")
                        .WithMany("Workouts")
                        .HasForeignKey("TrainnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainner");
                });

            modelBuilder.Entity("HealthSync.Models.InfoUser", b =>
                {
                    b.Navigation("InfosMenus");

                    b.Navigation("InfosTrainners");
                });

            modelBuilder.Entity("HealthSync.Models.Medic", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("HealthSync.Models.Menu", b =>
                {
                    b.Navigation("InfosMenus");
                });

            modelBuilder.Entity("HealthSync.Models.Trainner", b =>
                {
                    b.Navigation("InfosTrainners");

                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
